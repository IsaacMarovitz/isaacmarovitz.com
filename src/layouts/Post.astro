---
import Layout from "./Layout.astro";
import Footer from "../components/footer.astro";
const { frontmatter } = Astro.props;

const options: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "long",
    day: "numeric",
    timeZone: "UTC"
}

var date = new Date(frontmatter.pubDate.toString());
var dateString = date.toLocaleDateString("en-GB", options);
---

<Layout title={"Isaac Marovitz - " + frontmatter.title} snapping={false}>
    <meta charset="utf-8" />
    <div class="flex justify-center">
        <div class="flex flex-col min-h-screen min-w-0 max-w-4xl text-white">
            <div class="flex flex-col max-[1400px]:px-5 grow">
                <div class="flex flex-col items-start text-left pt-10 gap-3">
                    <div class="flex flex-row justify-between w-full">
                        <a href="/blog" class="flex flex-row items-center gap-2 back hover:scale-110 transition-transform backdrop-blur-md bg-stone-900/60 rounded-xl p-2 drop-shadow-sm">
                            <i class="fa-solid fa-chevron-left"></i>
                            <p>All Posts</p>
                        </a>
                        <a href="/" class="flex flex-row items-center gap-2 back hover:scale-110 transition-transform backdrop-blur-md bg-stone-900/60 rounded-xl p-2 drop-shadow-sm">
                            <i class="fa-solid fa-home"></i>
                            <p>Home</p>
                        </a>
                    </div>
                    <div class="flex flex-col gap-2">
                        <h1 class="font-extrabold text-2xl sm:text-5xl lg:text-5xl">
                            {frontmatter.title}
                        </h1>

                        <p>{frontmatter.description}</p>
                        <p>Published {dateString}</p>
                        <div class="flex flex-row gap-2 items-center flex-wrap">
                        {
                            frontmatter.tags.map((tag: String) => (
                                <a href={"/tags/" + tag}>
                                    <div class="flex flex-row gap-2 backdrop-blur-md bg-stone-900/60 rounded-xl px-2 py-1 drop-shadow-sm">
                                        <p>{tag}</p>
                                    </div>
                                </a>
                            ))
                        }
                        </div>
                    </div>
                </div>
                <div class="py-5">
                    <hr />
                </div>
                <div class="flex justify-center">
                    <div class="flex flex-col gap-5 prose prose-invert prose-stone min-w-0 max-w-4xl">
                        <slot />
                    </div>
                </div>
                <div class="grow" />
                <Footer />
            </div>
            <div class="zoom-overlay"><img alt="Zoom overlay"/></div>
        </div>
    </div>
</Layout>

<script>
    function isDesktop() {
        return window.matchMedia("(pointer: fine)").matches;
    }

    function zoomImage(overlay: Element, img: HTMLImageElement) {
        overlay.querySelector("img")!.src = img.currentSrc || img.src;
        overlay.classList.add("active");
        document.body.style.overflow = "hidden";
    }

    function unzoomImage(overlay: Element) {
        overlay.classList.remove("active");
        document.body.style.overflow = "";
    }

    document.addEventListener("click", (e: Event) => {
        if (!isDesktop()) {
            return;
        }

        const overlay = document.querySelector(".zoom-overlay");
        const img = (e.target as HTMLElement).closest(".zoomable-img");

        if (img) {
            zoomImage(overlay!, img as HTMLImageElement);
            return;
        }

        if (overlay!.classList.contains("active")) {
            unzoomImage(overlay!);
        }
    });

    document.addEventListener("keydown", (e: KeyboardEvent) => {
        const overlay = document.querySelector(".zoom-overlay");

        if (e.key === "Escape" && overlay!.classList.contains("active")) {
            unzoomImage(overlay!);
        }
    });
</script>
